snippet #       可执行标识
	#!/usr/bin/env php
	${1}
snippet /       单行注释
	// ${1}
snippet //      多行注释
	/*${1}*/
snippet -       分隔注释
	// -------------------------------${1}
snippet php     单行标签
	<?PHP ${1} ?>
snippet php.    跨行标签
	<?PHP

	${1}

	?>
snippet doc     跨行文本
	<<<${1:}
	${2}
	$1;
# 命令空间、别名
snippet na      命名空间（行语法）
	namespace ${1};${2}
snippet na.     命名空间（大括号语法）
	namespace${1}
	{
	    ${2}
	}
snippet u       设置别名
	use ${1};${2}
snippet uas     自定义别名
	use ${1} as ${2};${3}
# 代码重用
snippet rq      require包含
	require '${1}';${2}
snippet rq.     只包含一次
	require_once '${1}';${2}
snippet in      include包含
	include '${1}';${2}
snippet in.     只包含一次
	include_once '${1}';${2}
snippet df      定义常量
	define('${1}', ${2});${3}
# 接口、类、方法
snippet int     接口定义
	interface ${1:int_name}
	{
	    ${2}
	}
snippet cl      类定义
	class ${1:cl_name}
	{
	    ${2}
	}
snippet cle     带继承的类定义
	class ${1:cl_nameA} extends ${2:cl_nameB}
	{
	    ${3}
	}
snippet cli     实现接口的类定义
	class ${1:cl_name} implements ${2:cl_intName}
	{
	    ${3}
	}
snippet clei    先继承后实现接口的类定义
	class ${1:cl_nameA} extends ${2:cl_nameB} implements ${3:cl_intName}
	{
	    ${4}
	}
snippet clee    继承异常类
	class ${1:cl_name} extends Exception
	{
	    ${2}
	}
snippet f       函数定义
	function ${1:f_name} (${2})
	{
	    ${3}
	}
snippet ff      匿名函数（不换行）
	function (${1}) {${2}}
snippet ffu     带use子句的匿名函数
	function (${1}) use (${2}) {${3}}
snippet abf     用于声明抽象方法
	abstract function ${1:f_name} (${2});${3}
snippet fc      构造方法
	function __construct (${1})
	{
	    ${2}
	}
snippet fd      析构方法
	function __destruct ()
	{
	    ${1}
	}
snippet fcl     克隆方法
	function __clone ()
	{
	    ${1}
	}
snippet fts     将类当作字符串打印
	function __toString (${1})
	{
	    ${2}
	}
snippet fal     自动加载
	function __autoload (${1})
	{
	    ${2}
	}
snippet fge     __get()：访问未定义的属性时被调用
	function __get (${1:property})
	{
	    ${2}
	}
snippet fse     __set()：给未定义的属性赋值时被调用
	function __set (${1:property}, ${2:value})
	{
	    ${3}
	}
snippet fca     __call()：调用未定义的方法时被调用
	function __call (${1:$methodname}, ${2:args})
	{
	    ${3}
	}
snippet fis     __isset()：对未定义的属性调用isset()时被调用
	function __isset (${1:property})
	{
	    ${2}
	}
snippet fus     __unset()：对未定义的属性调用unset()时被调用
	function __unset (${1:property})
	{
	    ${2}
	}
# 流程控制
snippet if      if
	if (${1}) {
	    ${2}
	}
snippet elif    elseif
	elseif (${1}) {
	    ${2}
	}
snippet el      else
	else {
	    ${1}
	}
snippet fo      for循环
	for (${1}) {
	    ${2}
	}
snippet fe      foreach迭代
	foreach (${1}) {
	    ${2}
	}
snippet wh      while循环
	while (${1}) {
	    ${2}
	}
snippet do      do .. while
	do {
	    ${2}
	}
	while (${1});
snippet sw      switch
	switch (${1}) {
	${2}
	}
snippet cs      case
	case ${1}:
	    ${2}
snippet def     default
	default:
	    ${1}
# 异常处理
snippet thr     抛出异常
	throw new ${1:Exception}(${2});
snippet try     监控代码块
	try {
	    ${1}
	}
snippet cat     捕获异常
	catch (${1:Exception} $${2:e}) {
	    ${3}
	}
snippet fin     善后处理 [PHP 5.5新增]
	finally {
	    ${1}
	}
snippet E       Exception
	Exception${1}
snippet gmsg    获取消息字符串
	getMessage()${1}
snippet gcode   获取错误代码
	getCode()${1}
snippet gfile   获取产生异常的文件
	getFile()${1}
snippet gline   获取产生异常的行号
	getLine()${1}
snippet gpre    获取一个嵌套的异常对象
	getPrevious()${1}
snippet gtra    获取一个异常数据的多维数组
	getTrace()${1}
snippet gtraas  获取异常数据的字符串版本
	getTraceAsString()${1}
# 反射类
snippet R       Reflection
	Reflection${1}
snippet Rcl     类信息和工具
	ReflectionClass${1}
snippet Rme     类方法信息和工具
	ReflectionMethod${1}
snippet Rpar    方法参数信息
	ReflectionParameter${1}
snippet Rpro    类属性信息
	ReflectionProperty${1}
snippet Rfun    函数信息和工具
	ReflectionFunction${1}
snippet Rext    PHP扩展信息
	ReflectionExtension${1}
snippet Rexc    错误类
	ReflectionException${1}
# 正则表达式
snippet reg     对数组元素进行正则筛选
	preg_grep(${1})
snippet req     将字符串转换成合法的正则字符串
	preg_quote(${1})
snippet res     对字符串进行正则分割
	preg_split(${1})
snippet rem     正则匹配
	preg_match(${1})
snippet rema    全局匹配
	preg_match_all(${1})
snippet rer     正则搜索和替换
	preg_replace(${1})
snippet rerc    正则搜索并使用回调函数进行处理
	preg_replace_callback(${1})
# 输入输出
snippet e       输出
	echo ${1};
snippet pi      输出
	print ${1};
snippet pf      格式化输出
	printf('${1}'${2});
snippet spr     格式化输出给一个字符串
	sprintf('${1}'${2});
snippet nuf     数值格式化
	number_format(${1})
# 调试
snippet ee      输出信息，并终止执行
	echo ${1};  exit();
snippet e-      打印调试分隔符
	echo '------ ${1} ------<br/>';
snippet vd      打印变量信息
	var_dump(${1});
snippet vde     打印变量信息，并终止执行
	var_dump(${1}); exit();
snippet ve      打印变量信息（可用于直接赋值）
	var_export(${1});
snippet vee     打印变量信息（可用于直接赋值）并终止执行
	var_export(${1}); exit();
snippet p_r     打印变量信息（无数据类型）
	print_r(${1});
snippet p_re    打印变量信息（无数据类型），并终止执行
	print_r(${1}); exit();
snippet dzd     打印引用次数
	debug_zval_dump(${1});
snippet dzde    打印引用次数，并终止执行
	debug_zval_dump(${1}); exit();
snippet dpb     打印程序调用栈
	debug_print_backtrace();${1}
snippet dpbe    打印程序调用栈，并终止执行
	debug_print_backtrace(); exit();${1}
# 超全局变量
snippet glo     全局变量
	$GLOBALS['${1}']
snippet env     环境变量
	$_ENV['${1}']
snippet ser     服务器环境变量
	$_SERVER['${1}']
snippet coo     COOKIE数据
	$_COOKIE['${1}']
snippet ses     SESSION数据
	$_SESSION['${1}']
snippet get     GET数据
	$_GET['${1}']
snippet pos     POST数据
	$_POST['${1}']
snippet req     GET、POST、COOKIE数据
	$_REQUEST['${1}']
snippet fil     与文件上传相关的变量数组
	$_FILES['${1}']
# 单个关键字
snippet ab      抽象类
	abstract ${1}
snippet pu      公共
	public ${1}
snippet po      保护
	protected ${1}
snippet pr      私有
	private ${1}
snippet fi      阻止继承和重载
	final ${1}
snippet pa      引用父类属性和方法
	parent::${1}
snippet clo     对象克隆
	clone ${1}
snippet gl      全局变量
	global ${1}
snippet st      静态属性/延迟绑定
	static ${1}
snippet con     常量属性
	const ${1}
snippet go      跳转
	goto ${1}
snippet co      继续
	continue;${1}
snippet br      中断
	break;${1}
snippet re      返回
	return ${1};
snippet yi      yield [PHP 5.5新增]
	yield ${1};
snippet ex      结束
	exit(${1});
snippet ins     检查对象是否是指定类的实例
	instanceof ${1}
snippet se      self::
	self::${1}
snippet t       $this->
	$this->${1}
snippet .       =>
	=> ${1}
# 预定义常量
snippet _       __ ... __
	__${1}__
snippet _l      __LINE__
	__LINE__${1}
snippet _f      __FILE__
	__FILE__${1}
snippet _d      __DIR__
	__DIR__${1}
snippet _ff     __FUNCTION__
	__FUNCTION__${1}
snippet _cl     __CLASS__
	__CLASS__${1}
snippet _na     __NAMESPACE__
	__NAMESPACE__${1}
#### 常用函数 ####
snippet ra      数组生成器
	range(${1}, ${2})
snippet ar      定义数组
	array(${1})
snippet exp     字符串分割
	explode('${1}', ${2})
snippet imp     字符串组合
	implode('${1}', ${2})
snippet jen     JSON数据的编码
	json_encode(${1})
snippet jde     JSON数据的解码
	json_decode(${1})
#### PHP标准库 #####
snippet s_areg  注册自动载入函数
	spl_autoload_register('${1}');
#### 模板标签 ####
snippet pe      输出标签
	<?PHP echo ${1}; ?>
snippet pp      输出标签 [PHP 5.4起默认可用]
	<?= ${1} ?>
snippet pif     if标签
	<?PHP if (${1}): ?>
	${2}
	<?PHP endif ?>
snippet pelif   elseif标签
	<?PHP elseif (${1}): ?>
snippet pel     else标签
	<?PHP else: ?>${1}
snippet pfo     for标签
	<?PHP for (${1}): ?>
	${2}
	<?PHP endfor ?>
snippet pfe     foreach标签
	<?PHP foreach (${1}): ?>
	${2}
	<?PHP endforeach ?>
################
