snippet /       单行注释
	// ${1}
snippet //      多行注释
	/*${1}*/
snippet -       分隔注释
	// -------------------------------${1}
# 包、模块
snippet im      导入包
	import ${1};${2}
snippet mo      模块
	module ${1}
# 类、接口
snippet cl      类定义
	class ${1:cl_name}
	{
	    ${1}
	}
snippet int     接口定义
	interface ${1:int_name}
	{
	    ${2}
	}
# 函数、数据结构
snippet main    主函数
	void main (string[] args)
	{
	    ${1}
	}
snippet f       函数定义
	${1:f_name} (${2})
	{
	    ${3}
	}
snippet fc      构造函数
	this (${1})
	{
	    ${2}
	}
snippet st      结构体定义
	struct ${1:str_name} {
	    ${2}
	}
# 流程控制
snippet if      if
	if (${1}) {
	    ${2}
	}
snippet elif    else if
	else if (${1}) {
	    ${2}
	}
snippet el      else
	else {
	    ${1}
	}
snippet fo      for
	for (${1}) {
	    ${2}
	}
snippet fe      foreach
	foreach (${1}) {
	    ${2}
	}
snippet wh      while
	while (${1}) {
	    ${2}
	}
snippet do      do-while
	do {
	    ${2}
	}
	while (${1});
snippet sw      switch
	switch (${1}) {
	    ${2}
	}
snippet cs      case
	case ${1}:
	    ${2}
snippet def     default
	default:
	    ${1}
# 异常处理
snippet try     监控代码块
	try {
	    ${1}
	}
snippet cat     捕获异常
	catch (${1}) {
	    ${2}
	}
snippet fin     善后处理
	finally {
	    ${1}
	}
# 单个关键字
snippet pu      公共
	public ${1}
snippet po      保护
	protected ${1}
snippet pr      私有
	private ${1}
snippet un      无符号
	unsigned ${1}
snippet st      静态
	static ${1}
snippet con     常量
	const ${1}
snippet co      继续
	continue;${1}
snippet br      中断
	break;${1}
snippet go      跳转
	goto ${1}
snippet re      返回
	return ${1};
snippet de      删除对象
	delete ${1}
# 输入输出
snippet wl      输出并换行
	writeln(${1});
snippet p       输出
	printf("${1}"${2});
snippet s       输入
	scanf("${1}", ${2});
